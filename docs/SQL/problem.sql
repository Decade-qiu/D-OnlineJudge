CREATE DATABASE doj_problem;
USE doj_problem;

DROP TABLE IF EXISTS `problem`;
/*!40101 SET @saved_cs_client = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem` (
  `id` bigint NOT NULL,
  `name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `input_style` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `output_style` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `data_range` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `input_sample` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `output_sample` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `difficulty` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `time_limit` int DEFAULT NULL,
  `memory_limit` int DEFAULT NULL,
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `total_pass` int DEFAULT NULL,
  `total_attempt` int DEFAULT NULL,
  `tag` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

INSERT INTO `problem` VALUES 
(1,'A+B','输入包含一系列的a和b对，通过空格隔开。一对a和b占一行。','对于输入的每对a和b，你需要依次输出a、b的和。如对于输入中的第二对a和b，在输出中它们的和应该也在第二行','不会超过int大小','[\"1 5\",\"10 20\"]','[\"6\",\"30\"]','简单',1,131072,'你的任务是计算a+b。这是为了acm初学者专门设计的题目。你肯定发现还有其他题目跟这道题的标题类似，这些问题也都是专门为初学者提供的。',2,3,'[\"基础\"]'),
(2,'0-1背包问题','第一行输入物品的个数n和背包容量C。\n\n第二行输入每个物品的价值v[i].\n\n第三行输入每个物品的重量w[i]','第一行输出最大价值。','','[\"4 7\\n9 10 7 4\\n3 5 2 1\"]','[\"20\"]','中等',1,131072,'给定n种物品和一背包。物品i的重量是wi，其价值为vi，背包的容量为C。问应如何选择装入背包的物品，使得装入背包中物品的总价值最大?',1,2,'[\"动态规划\",\"回溯算法\"]'),
(3,'百万富翁问题','无输入','输出百万富翁和陌生人各自交出的钱数，单位是元。','','[\"\"]','[\"\"]','简单',1,32768,'一个百万富翁遇到一个陌生人，陌生人找他谈了一个换钱的计划。该计划如下：我每天给你10万元，你第一天给我1分钱，第二天2分钱，第三天4分钱……这样交换30天后，百万富翁交出了多少钱？陌生人交出了多少钱？（注意一个是万元，一个是分）',10,12,'[\"算法\"]'),
(4,'统计单词','输入包括1行字符串，以“.”结束，字符串中包含多个单词，单词之间以一个或多个空格隔开。','可能有多组测试数据，对于每组数据输出字符串中每个单词包含的字母的个数。','没有数据要求','[\"hello how are you.\"]','[\"5 3 3 3\"]','中等',1,131072,'编一个程序，读入用户输入的，以“.”结尾的一行文字，统计一共有多少个单词，并分别输出每个单词含有多少个字符。（凡是以一个或多个空格隔开的部分就为一个单词',0, 12, '[\"真题\",\"字符串\"]'),
(5,'函数求值','输入N，求F(N)的值，1= N <= 10^100(10的100次方)若F(N)很大，则求F(N)mod20123的值','','1 <= N <= 10^100(10的100次方)','[\"10\\n10\"]','[\"3\\n3\"]','中等',1,131072,'给定正整数N，函数F(N)表示小于等于N的自然数中1和2的个数之和，例如：1,2,3,4,5,6,7,8,9,10序列中1和2的个数之和为3，因此 F(10)=3',2, 8, '[\"模拟\"]'),
(6,'加密','输入有多组数据。每组数据一行，包含一个字符串（长度 <= 1000），为需要加密的字符串。','对应每组数据，输出加密后的字符串。','长度<=1000','[\"I am a student.\",\"I love you.\"]','[\"student. a am I\",\"you. love I\"]','中等',1,32768,'602实验室里面有些秘密文件（英文的），我们要把它进行加密。对每一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。句子中单词以空格符隔开。为简单起见，标点符号和普通字母一样处理。',0, 1, '[\"字符串\"]'),
(7,'邮票','无',' 输出一行，表示题目所求。','','[]','[]','中等',1,131072,'某人有8 角的邮票5 张，1 元的邮票4 张，1 元8 角的邮票6 张，用这些邮票中的一张或若干张可以得到多少中不同的邮资？',9, 9, '[\"算术\"]'),
(8,'Very Good!','无需输入','\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\nVery    Good!\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*','','[\"无需输入\"]','[\"**************************\\nVery    Good!\\n**************************\\n\"]','简单',1,131072,'请参照本章例题，编写一个C程序，输出以下信息：\n\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\nVery    Good!\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n\n别光打印Very Good!\n\n另注意，星号的行和Very Good的行之间并没有额外的空行。',0,3,'[\"基础\"]'),
(9,'最长公共子序列','为保障统计正确，需在输入字符数组x和y的第一个字符设置标示，该字符不参与统计\n\n第一行输入序列x。\n\n第二行输入序列y。','第一行输出最大子串长度。\n\n第二行输出最大子串。','','[\"@thiscbook\\n#tisnook\"]','[\"6\\ntisook\"]','困难',1,131072,'若给定序列X={x1,x2,…,xm}，则另一序列Z={z1,z2,…,zk}，是X的子序列是指存在一个严格递增下标序列{i1,i2,…,ik}使得对于所有j=1,2,…,k有：zj=xij。例如，序列Z={B，C，D，B}是序列X={A，B，C，B，D，A，B}的子序列，相应的递增下标序列为{2，3，5，7}。\n\n给定2个序列X和Y，当另一序列Z既是X的子序列又是Y的子序列时，称Z是序列X和Y的公共子序列。\n\n给定2个序列X={x1,x2,…,xm}和Y={y1,y2,…,yn}，找出X和Y的最长公共子序列。',2, 9, '[\"算法\"]'),
(10,'文字排版','输入第一行是一个整数N，表示该段要求达到的宽度，1大于等于N大于等于80。该段文章由一个或多个单词组成，单词由ASCII码值为33到126（包含33和126）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过10000个字符，任何一行都不会超过100个字符，任何一个单词都在同一行内。','对于每个段落，找出使其难看程度最小的排版形式并输出句子：“Minimal badness is B.”,B是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。样例输入','','[\"28\\nThis is the example you  are\\nactually considering.\"]','[\"Minimal badness is 12.\"]','噩梦',1,131072,'写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。\n\n完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子：\n\n****************************\n\nThis is the example you  are\n\nactually considering.\n\n假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果：\n\n****************************\n\nThis is the example you  are\n\nactually        considering.\n\n \n\n但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“are”移到下一行我们将得到较好的结果：\n\n****************************\n\nThis  is  the  example   you\n\nare  actually   considering.\n\n \n\n当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含N个空格符的空白段，其难看程度值为(n-1)2，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是1+7*7=50，而第二个例子的难看程度仅为1+1+1+4+1+4=12。\n\n输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，对于这种情况你可将单词放在该行开头处输出，此时如果该单词比该行应有的长度短则我们指定它的最坏程度为500，当然在这种情况下，该行的实际长度即为该单词的长度。',1, 3, '[\"动态规划 \"]'),
(11,'排序','输入的第一行包括一个整数n(1《=n《=100)。 接下来的一行包括n个整数。v','可能有多组测试数据，对于每组数据，将排序后的n个整数输出，每个数后面都有一个空格。每组测试数据的结果占一行。','n(1《=n《=100)','[\"5\n5 4 3 1 2\"]','[\"1 2 3 4 5 \"]','简单',1,131072,'对输入的n个数进行排序并输出。',1, 2, '[\"排序\"]'),
(12,'密码','China','加密后的China','','[\"China\"]','[\"Glmre\"]','中等',1,10,'要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，C、h、i、n、a，经过运算，使c1、c2、c3、c4、c5分别变为G、l、m、r、e，并输出。',10, 10, '[\"基础\",\"C语言\"]'),
(13,'有重复元素的排列问题','输入的第1 行是元素个数n，1大于等于n大于等于500。接下来的1 行\n\n是待排列的n 个元素。','程序运行结束时，将计算出的n 个元素的所有不同排列输出。\n\n最后1 行中的数是排列总数。','','[\"4\\naacc\"]','[\"aacc\\nacac\\nacca\\ncaac\\ncaca\\nccaa\\n6\"]','中等',1,131072,'设R=r1, r2 ,…, rn是要进行排列的n 个元素。其中元素 r1, r2 ,…, rn 可能相同。试设计\n\n一个算法，列出R 的所有不同排列。\n设R=r1, r2 ,…, rn是要进行排列的n 个元素。其中元素 r1, r2 ,…, rn 可能相同。试设计\n\n一个算法，列出R 的所有不同排列。\n\n\n',2, 2, '[\"算法\",\"复杂算法\"]'),
(14,'任务调度','输入包含多组测试数据。每组第一行输入一个整数n（n 大于 100000），表示有n个任务。接下来n行，每行第一个表示前序任务，括号中的任务为若干个后序任务，表示只有在前序任务完成的情况下，后序任务才能开始。若后序为NULL则表示无后继任务。','输出调度方式，输出如果有多种适合的调度方式，请输出字典序最小的一种。','输入方式已说明','[\"4\\nTask0(Task1,Task2)\\nTask1(Task3)\\nTask2(NULL)\\nTask3(NULL)\\n\"]','[\"Task0 Task1 Task2 Task3\"]','困难',1,10,'读入任务调度序列，输出n个任务适合的一种调度方式。',1, 2, '[\"真题\"]'),
(15,'Hello World!','无需输入','Hello World!','','[\"\"]','[\"Hello World!\"]','简单',1,131072,'输出Hello World!',0,3,'[\"基础\",\"C语言\"]'),
(16,'圆圈游戏','There are several test cases, each test case firstly contains four integersn, m, S, T\nS is the XOR sum of students\' positions when Tracy wakes up. Another 3 integers n, m, T are described as the above. Then n integers will follow in the next line, which represent the positions of students initially. \nThe input will finish with the end of file.',' each test case, output the number of possible periods of time that Tracy had slept and matched the above restrictions. Please output zero if no time matched.',' 0 &lt; n &lt;= 100000, 0 &lt; m &lt;= 50, 0 &lt;= S &lt; 2^50 , 0 &lt; T &lt;= 10^16 ,and the student position is in the range [0, 2^m] ','[\"3 3 7 5\\n0 2 7\\n5 3 7 5\\n1 2 3 4 5\\n4 4 0 10\\n1 3 5 7\\n6 5 18 100\\n22 10 18 20 2 10\"]','[\"0\\n4\\n50\"]','噩梦',1,131072,'You must have some knowledge with circle games in ACM problems, such as Joseph Ring problem. Today we are going to introduce a new circle game described as follows. There is a circle which contains\npoints, numbered from 0 to M-1. At first, n students stand in different points of the circle. It is possible that more than one student stand in the same point. For each second, each student moves one \nstep forward in clockwise direction. The following picture gives us an example of that M equals to 8 and n equals to 3. Initially, the first student S1 stands in the point 0, the second student S2 stands \nin the point 2 and the third student stands in the point 7. After 2 seconds, they will change their positions as the right part of the picture.',1, 4, '[\"英语\",\"基础\"]'),
(17,'钓鱼','输入第一行为一个整数n，第二行为一个整数h，第三行为n个用空格隔开的整数，表示Fi（i=1,2,…,n），第四行为n个用空格隔开的整数，表示di（i=1,2,…,n），第五行为n-1个用空格隔开的整数，表示ti（i=1,2,…,n-1）','输出一个整数，表示约翰最多能钓到的鱼的数量。','','[\"2\\n1\\n10 1\\n2 5 \\n2\"]','[\"31\"]','困难',1,10,'约翰是个垂钓谜，星期天他决定外出钓鱼h小时（1≤h≤16），约翰家附近共有n个池塘（2≤n≤25），这些池塘分布在一条直线上，约翰将这些池塘按离家的距离编上号，依次为L1,L2,…,Ln，约翰家门外就是第一个池塘，所以他到第一个池塘是不用花时间的，约翰可以任选若干个池塘垂钓，并且在每个池塘他都可以呆上任意长的时间，但呆的时间必须为5分钟的倍数，（5分钟为一个单位时间），已知从池塘Li到池塘Li+1要化去约翰ti个单位时间，每个池塘的上鱼率预先也是已知的，池塘Li在第一个单位时间内能钓到的鱼为Fi（0≤Fi≤100），并且每过一个单位时间在单位时间内能钓到的鱼将减少一个常数di（0≤di≤100），现在请你编一个程序计算约翰最多能钓到多少鱼。',2, 2, '[\"动态规划\"]'),
(18,'查找元素(线性表)','第一行 原始数列：2 3 4 5 6 7 8 9 第二行 需要找的数：1','找到则输出数在数列中的位置，第一个位置输出1依次类推若没有找到输出0','','[\"2 3 4 5 6 7 8 9\\n5\"]','[\"4\"]','简单',1,10,'（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。若找到，则函数返回该数在列表中的地址(i [1~n])；若找不到，则函数返回0',1, 10, '[\"数据结构\"]'),
(19,'找回文数','无','输出所有符合条件的回文数，','','[\"没有输入\"]','[\"2 3 4 5 6 7 8 9 11 22 33 44 55 66 77 88 99 101 111 121 131 141 151 161 171 181 191 202 212 222 232 242 252 262 272 282 292 303 313 323 333 343 353 363 373 383 393 404 414 424 434 444 454 464 474 484 494 505 515 525 535 545 555 565 575 585 595 606 616 626 636 646 656 666 676 686 696 707 717 727 737 747 757 767 777 787 797 808 818 828 838 848 858 868 878 888 898 909 919 929 939 949 959 969 979 989 999 1001 1111 1221 1331 1441 1551 1661 1771 1881 1991 2002 2112 2222 2332 2442 2552 2662 2772 2882 2992 3003 3113 3223 3333 3443 3553 3663 3773 3883 3993 4004 4114 4224 4334 4444 4554 4664 4774 4884 4994 5005 5115 5225 5335 5445 5555 5665 5775 5885 5995 6006 6116 6226 6336 6446 6556 6666 6776 6886 6996 7007 7117 7227 7337 7447 7557 7667 7777 7887 7997 8008 8118 8228 8338 8448 8558 8668 8778 8888 8998 9009 9119 9229 9339 9449 9559 9669 9779 9889 9999\"]','困难',1,131072,'找出10000以内的回文数。从左向右读与从右向左读是同一个数的数为回文数，如19391是回文数。',11, 11, '[\"入门-中级\"]'),
(20,' 文件排版 format','输入文件第一行是一个整数N，表示排版后文章每行要求达到的宽度，1 大于等于 N 大于等于 80。后面是给出的一段文章，该段文章由一个或多个单词组成，单词由ASCII码值为33到126（包含33和126）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过10000个字符，任何一行都不会超过100个字符，任何一个单词都在同一行内。输出','对于每个段落，找出使其难看程度最小的排版形式并输出句子：“Minimal badness is B.”,B是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。','见输入输出。','[\"28\\nThis is the example you  are\\nactually considering.\"]','[\"Minimal badness is 12.\"]','噩梦',1,131072,'写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子：\\n\nThis is the example you  are\\n\nactually considering.\\n\n假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果:\\n\nThis is the example you  are\\n\nactually        considering.\\n\n但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“are”移到下一行我们将得到较好的结果：\\n\nThis  is  the  example   you\\n\nare  actually   considering.\\n\n当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含N个空格符的空白段，其难看程度值为(n-1)2，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是1+7*7=50，而第二个例子的难看程度仅为1+1+1+4+1+4=12。输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，此时如果该单词比该行应有的长度短则我们指定它的难看程度为500。',2, 5, '[\"NOIP\",\"NOIP-模拟题\"]'),
(21,'斐波那契数列','所求项数','数据项的值','','[\"10\"]','[\"34\"]','简单',1,131072,'斐波那契数列0,1,1,2,3,5,8,13,21,34,55……从第三项起，每一项都是紧挨着的前两项的和。写出计算斐波那契数列任意一个数据项的递归程序。',1, 1, '[\"递归\"]'),
(22,' 换零钱','','','','[\"0\"]','[\"11\"]','简单',1,131072,'某人想将手中的一张面值 100 元的人民币换成 5 元、 1 元和 0.5 元面值的票子，但要求换正好 100 张，且每种票子至少一张。问：有几种换法？提示： 用三重循环。想一想如何减少循环的次数。5 元、 1 元和 0.5 元最多各需要几张。记得要求正好换 100 张，总价值100元。循环变量代表某个币种的张数。',9, 10, '[\"基础\",\"美剧\"]'),
(23,'试卷批分','','','','[\"读题\"]','[\"请输出正确答案\"]','噩梦',1,131072,'【问题描述：】 某学校进行了一次英语考试，共有10道是非题，每题为10分，解答用1表示“是”，用0表示“非”的方式。但老师批完卷后，发现漏批了一张试卷，而且标准答案也丢失了，手头只剩下了3张标有分数的试卷。\\n\n试卷一：\\n\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\\n\n0 0 1 0 1 0 0 1 0 0 得分：70\\n\n试卷二：\\n\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\\n\n0 1 1 1 0 1 0 1 1 1 得分：50\\n\n试卷三：\\n\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\\n\n0 1 1 1 0 0 0 1 0 1 得分：30\\n\n待批试卷：\\n\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩\\n\n0 0 1 1 1 0 0 1 1 1 得分：？\\n\n【问题求解：】 请编一程序依据这三张试卷，算出漏批的那张试卷的分数。',9, 10, '[\"回溯\",\"深搜\"]'),
(24,'对称平方数1','无任何输入数据','输出具有题目要求的性质的数。如果输出数据不止一组，各组数据之间以回车隔开','','[\"\"]','[\"\"]','中等',1,131072,'打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2*2=4，11*11=121。',9, 10, '[\"真题\"]'),
(25,'DNA','输入包含多组测试数据。第一个整数N（N大于等于15）,N表示组数，每组数据包含两个整数a,b。a表示一个单位的DNA串的行数，a为奇数且 3大于等于a大于等于39。b表示重复度(1大于等于b大于等于20)。','输出DNA的形状，每组输出间有一空行。','','[\"c\"]','[\"X X\\n X\\nX X\\n\\nX   X\\n X X\\n  X\\n X X\\nX   X\\n X X\\n  X\\n X X\\nX   X\\n X X\\n  X\\n X X\\nX   X\\n X X\\n  X\\n X X\\nX   X\"]','中等',1,131072,'小强从小就喜欢生命科学，他总是好奇花草鸟兽从哪里来的。终于， 小强上中学了，接触到了神圣的名词--DNA.它有一个双螺旋的结构。这让一根筋的小强抓破头皮，“要是能画出来就好了” 小强喊道。现在就请你帮助他吧',90, 100, '[\"基础\",\"C语言\"]');
